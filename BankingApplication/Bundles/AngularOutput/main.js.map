{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/components/account/account.component.ts","./src/app/components/account/account.component.html","./src/app/services/main.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'Angular';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\nimport { AccountComponent } from './components/account/account.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { MainService } from './services/main.service';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    AccountComponent\r\n  ],\r\n  imports: [\r\n    HttpClientModule,\r\n    BrowserModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  providers: [MainService],\r\n  bootstrap: [AppComponent,AccountComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\n\nimport Account from '../../models/Account';\nimport Transaction from '../../models/Transaction';\nimport { MainService } from '../../services/main.service';\nimport { FormsModule } from '@angular/forms';\nimport Kind from '../../models/Kind';\r\n\n@Component({\n  selector: 'app-account',\n  templateUrl: './account.component.html',\n  styleUrls: ['./account.component.scss']\n})\nexport class AccountComponent implements OnInit {\n  account: Array<Account>;\n  transaction: Array<Transaction>;\n  kind: Array<Kind>;\n  currentId: number;\n  currentAccount: Account;\n  current: string;\n  \n\n  constructor(private service: MainService) { }\n\r\n\n  ngOnInit(): void {\n    this.service.getAllAcounts().subscribe(data => {\n      this.account = data;\r\n      this.currentId = this.account[0].id;\r\n      this.currentAccount = this.account[0];\r\n      this.service.getTransaction(this.currentAccount.id).subscribe(data => {\n        this.transaction = data;\r\n      })\r\n    })\n    this.service.getAllKinds().subscribe(data => {\n      this.kind = data;\r\n    })\n    \n  }\n\n  check(event) {\r\n    for (let v in this.account) \r\n    {\r\n      if (this.account[v].id == event.target.value) {\r\n        this.currentAccount = this.account[v];\r\n        this.service.getTransaction(this.currentAccount.id).subscribe(data => {\n          this.transaction = data;\r\n        })\r\n      }\r\n    }  \r\n  }\n\n  \n\n}\n","<div style=\"text-align:center\">\r\n  \r\n  <div id=\"accounts\">\r\n    <h1>\r\n      Konto\r\n    </h1>\r\n    <select name=\"account\" [(ngModel)]=\"currentId\" (input)=\"check($event)\">\r\n      <option *ngFor=\"let a of account\" [value]=\"a.id\">\r\n        {{a.accountNumber}}\r\n      </option>\r\n    </select>\r\n  </div>\r\n  \r\n  <div id=\"balance\">\r\n    Dostępne środki:<br/>\r\n    <p>{{currentAccount?.balance}} PLN</p>\r\n  </div>\r\n\r\n  <table class=\"table\">\r\n    <tr>\r\n      <th>DATA</th>\r\n      <th>RODZAJ</th>\r\n      <th>TYTUŁ</th>\r\n      <th>KWOTA</th>\r\n    </tr>\r\n    <tr *ngFor=\"let t of transaction\">\r\n      <td>\r\n        {{t.date | date: 'dd/MM/yyyy'}}\r\n      </td>\r\n      <td>\r\n        {{kind[t.operationKindId-1]?.kind}}\r\n      </td>\r\n      <td>\r\n        {{t.title}}\r\n      </td>\r\n      <td>\r\n        {{t.amount | number : '1.2-2'}}\r\n      </td>\r\n    </tr>\r\n  </table>\r\n  \r\n</div>\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport Account from '../models/Account';\nimport Transaction from '../models/Transaction';\nimport Kind from '../models/Kind';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MainService {\n  public API = 'https://localhost:44305/api';\n  public ACCOUNT_ENDPOINT = `${this.API}/Accounts`;\n  public TRANSACTION_ENDPOINT = `${this.API}/Transactions/`;\n  public KIND_ENDPOINT = `${this.API}/OperationKinds`;\n\n  constructor(private http: HttpClient) { }\n\n  getAllAcounts(): Observable<Array<Account>> {\n    return this.http.get<Array<Account>>(this.ACCOUNT_ENDPOINT);\r\n  }\n  getTransaction(id: number): Observable<Array<Transaction>> {\n    return this.http.get<Array<Transaction>>(this.TRANSACTION_ENDPOINT+id);\r\n  }\n  getAllKinds(): Observable<Array<Kind>> {\n    return this.http.get<Array<Kind>>(this.KIND_ENDPOINT);\r\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}